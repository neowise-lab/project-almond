package com.neowise.almond.bytecode

import com.neowise.almond.bytecode.Instruction.Argument.*

/**
 * !!! Rewrite Instructions enum class to Int values
 */
enum class Instruction(private vararg val args: Argument) {

    NONE(SHORT),
    LOAD(SHORT),
    STORE(SHORT, BYTE),
    ALOAD,
    ASTORE(BYTE),
    LISTPUT,
    SET,
    AD_SET,  // +
    SUB_SET,  // -
    DIV_SET,  // /
    MUL_SET,
    REM_SET,
    AND_SET,
    OR_SET,
    XOR_SET,
    LSH_SET,
    RSH_SET,
    URSH_SET,
    SETSTATIC(MEMBER_REF, BYTE),
    PUTSTATIC(MEMBER_REF),
    RET,
    V_RET,
    IF(MARK),
    IFNE(MARK),
    JUMP(MARK),
    ITERATOR,
    IT_HAS_NEXT,
    IT_NEXT,
    MIT_NEXT,
    CASE(MARK),
    DEFAULT(MARK),
    POP,
    TRY(MARK),
    CATCH(MODULE_REF, MARK),
    OR,
    AND,
    BOR,
    XOR,
    BAND,
    IS(MODULE_REF),
    EQ,
    NTEQ,
    LT,
    LTEQ,
    GT,
    GTEQ,
    LSHIFT,
    RSHIFT,
    URSHIFT,
    ADD,
    SUB,
    PUSH,
    MULT,
    DIV,
    REM,
    NEG,
    EXCL,
    COMP,
    NEWOBJ(MODULE_REF, BYTE),
    NEWARRAY(BYTE),
    NEWARGARR(BYTE),
    NEWMAP(BYTE),
    SETVIRTUAL(MEMBER_REF, BYTE),
    PUTVIRTUAL(MEMBER_REF),
    INC(SHORT),
    DEC(SHORT),
    STATIC_INC(MEMBER_REF),
    STATIC_DEC(MEMBER_REF),
    VIRTUAL_INC(MEMBER_REF),
    VIRTUAL_DEC(MEMBER_REF),
    INST_INC(MEMBER_REF),
    INST_DEC(MEMBER_REF),
    ARRAY_INC,
    ARRAY_DEC,
    IPUSH(INTEGER),
    LPUSH(LONG),
    FPUSH(FLOAT),
    SPUSH(STRING),
    ZCONST_0,
    ZCONST_1,
    ACONST_0,
    ACONST_1,
    CALLSTATIC(MEMBER_REF, BYTE),
    CALLVIRTUAL(MEMBER_REF, BYTE),
    CALLREF(BYTE),
    SETINSTANCE(STRING, BYTE),
    PUTINSTANCE(STRING),
    REFSTATIC(MEMBER_REF),
    REFVIRTUAL(MEMBER_REF),
    REFINSTANCE(STRING),
    LAMBDA(MODULE_REF, SHORT),
    NEWLIST,
    CALLSTD(STD_REF, BYTE),
    CALLINSTANCE,
    THROW,
    OUT_TRY(SHORT),
    ARGUMENTS;

    val text: String = name.toLowerCase()
    val arguments: Array<out Argument> = this.args

    enum class Argument {
        MARK, SHORT, BYTE, MODULE_REF, MEMBER_REF, STD_REF, STRING, INTEGER, LONG, FLOAT
    }
}